## -*- coding: UTF-8 -*_
## lnk.py
##
## Copyright (c) 2018 analyzeDFIR
## 
## Permission is hereby granted, free of charge, to any person obtaining a copy
## of this software and associated documentation files (the "Software"), to deal
## in the Software without restriction, including without limitation the rights
## to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
## copies of the Software, and to permit persons to whom the Software is
## furnished to do so, subject to the following conditions:
## 
## The above copyright notice and this permission notice shall be included in all
## copies or substantial portions of the Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
## IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
## AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
## OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
## SOFTWARE.

from construct import singleton

try:
    from constants import *
    from shared_structures.windows.guid import NTFSGUID
    from shared_structures.windows.misc import NTFSFILETIME
except ImportError:
    from .constants import *
    from .shared_structures.windows.guid import NTFSGUID
    from .shared_structures.windows.misc import NTFSFILETIME

@singleton
class LNKUnicodeCString(Construct):
    '''
    Class for parsing CString structures encoded as unicode
    strings (UTF16LE or UTF8)
    TODO: Move to libadir-structures
    '''
    def _parse(self, stream, context, path):
        op = stream.tell()
        try:
            return Aligned(0x04, CString('UTF16'))._parse(stream, context, path)
        except:
            stream.seek(op)
            try:
                return CString('UTF8')._parse(stream, context, path)
            except:
                stream.seek(op)
                raise
    def _build(self, obj, stream, context, path):
        try:
            return Aligned(0x04, CString('UTF16'))._build(obj, stream, context, path)
        except:
            return CString('UTF8')._build(obj, stream, context, path)

LNKTrackerDataBlock = Struct(
    'Length'                / Const(0x58, Int32ul),
    'Version'               / Const(0x00, Int32ul),
    'RawMachineID'          / Bytes(16),
    'DroidPart1'            / NTFSGUID,
    'DroidPart2'            / NTFSGUID,
    'DroidBirthPart1'       / NTFSGUID,
    'DroidBirthPart2'       / NTFSGUID
)

LNKSpecialFolderDataBlock = Struct(
    'KnownFolderID'                 / Int32ul,
    'LinkTargetIDListOffset'        / Int32ul
)

LNKShimDataBlock = Struct(
    # TODO: Look in Construct API docs for Computed type, should be TotalSize - 8
    'LayerName'                     / Pass
)

LNKKnownFolderDataBlock = Struct(
    'KnownFolderID'                 / NTFSGUID,
    'LinkTargetIDListOffset'        / Int32ul
)

LNKIconEnvironmentDataBlock = Struct(
    'RawTargetLocation'     / Bytes(260),
    'RawUTargetLocation'    / Bytes(520)
)

LNKEnvironmentVariablesDataBlock = Struct(
    'RawTargetLocation'     / Bytes(260),
    'RawUTargetLocation'    / Bytes(520)
)

LNKDarwinDataBlock = Struct(
    'RawApplicationIdentifier'      / Bytes(260),
    'RawUApplicationIdentifier'     / Bytes(520)
)

LNKConsoleFEDataBlock = Bitwise(Struct(
    Padding(12),
    'SortID'                / BitsInteger(4),
    'LanguageID'            / Bytewise(Enum(Int16ul,
        AR              = 0x0001,
        BG              = 0x0002,
        CA              = 0x0003,
        ZH_HANS         = 0x0004,
        CS              = 0x0005,
        DA              = 0x0006,
        DE              = 0x0007,
        EL              = 0x0008,
        EN              = 0x0009,
        ES              = 0x000A,
        FI              = 0x000B,
        FR              = 0x000C,
        HE              = 0x000D,
        HU              = 0x000E,
        IS              = 0x000F,
        IT              = 0x0010,
        JA              = 0x0011,
        KO              = 0x0012,
        NL              = 0x0013,
        NO              = 0x0014,
        PL              = 0x0015,
        PT              = 0x0016,
        RM              = 0x0017,
        RO              = 0x0018,
        RU              = 0x0019,
        BS              = 0x001A,
        SK              = 0x001B,
        SQ              = 0x001C,
        SV              = 0x001D,
        TH              = 0x001E,
        TR              = 0x001F,
        UR              = 0x0020,
        ID              = 0x0021,
        UK              = 0x0022,
        BE              = 0x0023,
        SL              = 0x0024,
        ET              = 0x0025,
        LV              = 0x0026,
        LT              = 0x0027,
        TG              = 0x0028,
        FA              = 0x0029,
        VI              = 0x002A,
        HY              = 0x002B,
        AZ              = 0x002C,
        EU              = 0x002D,
        DSB             = 0x002E,
        MK              = 0x002F,
        ST              = 0x0030,
        TS              = 0x0031,
        TN              = 0x0032,
        VE              = 0x0033,
        XH              = 0x0034,
        ZU              = 0x0035,
        AF              = 0x0036,
        KA              = 0x0037,
        FO              = 0x0038,
        HI              = 0x0039,
        MT              = 0x003A,
        SE              = 0x003B,
        GA              = 0x003C,
        YI              = 0x003D,
        MS              = 0x003E,
        KK              = 0x003F,
        KY              = 0x0040,
        SW              = 0x0041,
        TK              = 0x0042,
        UZ              = 0x0043,
        TT              = 0x0044,
        BN              = 0x0045,
        PA              = 0x0046,
        GU              = 0x0047,
        OR              = 0x0048,
        TA              = 0x0049,
        TE              = 0x004A,
        KN              = 0x004B,
        ML              = 0x004C ,
        AS              = 0x004D,
        MR              = 0x004E,
        SA              = 0x004F,
        MN              = 0x0050,
        BO              = 0x0051,
        CY              = 0x0052,
        KM              = 0x0053,
        LO              = 0x0054,
        MY              = 0x0055,
        GL              = 0x0056,
        KOK             = 0x0057,
        MNI             = 0x0058,
        SD              = 0x0059,
        SYR             = 0x005A,
        SI              = 0x005B,
        CHR             = 0x005C,
        IU              = 0x005D,
        AM              = 0x005E,
        TZM             = 0x005F,
        KS              = 0x0060,
        NE              = 0x0061,
        FY              = 0x0062,
        PS              = 0x0063,
        FIL             = 0x0064,
        DV              = 0x0065,
        BIN             = 0x0066,
        FF              = 0x0067,
        HA              = 0x0068,
        IBB             = 0x0069,
        YO              = 0x006A,
        QUZ             = 0x006B,
        NSO             = 0x006C,
        BA              = 0x006D,
        LB              = 0x006E,
        KL              = 0x006F,
        IG              = 0x0070,
        KR              = 0x0071,
        OM              = 0x0072,
        TI              = 0x0073,
        GN              = 0x0074,
        HAW             = 0x0075,
        LA              = 0x0076,
        SO              = 0x0077,
        II              = 0x0078,
        PAP             = 0x0079,
        ARN             = 0x007A,
        MOH             = 0x007C,
        BR              = 0x007E,
        MI              = 0x0080,
        OC              = 0x0081,
        CO              = 0x0082,
        GSW             = 0x0083,
        SAH             = 0x0084,
        QUT             = 0x0085,
        RW              = 0x0086,
        WO              = 0x0087,
        PRS             = 0x008B,
        GD              = 0x0090,
        KU              = 0x0091,
        QUC             = 0x0092,
        AR_SA           = 0x0093,
        BG_BG           = 0x0401,
        CA_ES           = 0x0402,
        ZH_TW           = 0x0403,
        CS_CZ           = 0x0404,
        DA_DK           = 0x0405,
        DE_DE           = 0x0406,
        EL_GR           = 0x0407,
        EN_US           = 0x0408,
        ES_ES_TRADNL    = 0x0409,
        FI_FI           = 0x040A,
        FR_FR           = 0x040B,
        HE_IL           = 0x040C,
        HU_HU           = 0x040D,
        IS_IS           = 0x040E,
        IT_IT           = 0x040F,
        JA_JP           = 0x0410,
        KO_KR           = 0x0411,
        NL_NL           = 0x0412,
        NB_NO           = 0x0413,
        PL_PL           = 0x0414,
        PT_BR           = 0x0415,
        RM_CH           = 0x0416,
        RO_RO           = 0x0417,
        RU_RU           = 0x0418,
        HR_HR           = 0x0419,
        SK_SK           = 0x041A,
        SQ_AL           = 0x041B,
        SV_SE           = 0x041C,
        TH_TH           = 0x041D,
        TR_TR           = 0x041E,
        UR_PK           = 0x041F,
        ID_ID           = 0x0420,
        UK_UA           = 0x0421,
        BE_BY           = 0x0422,
        SL_SI           = 0x0423,
        ET_EE           = 0x0424,
        LV_LV           = 0x0425,
        LT_LT           = 0x0426,
        TG_CYRL_TJ      = 0x0427,
        FA_IR           = 0x0428,
        VI_VN           = 0x0429,
        HY_AM           = 0x042A,
        AZ_LATN_AZ      = 0x042B,
        EU_ES           = 0x042C,
        HSB_DE          = 0x042D,
        MK_MK           = 0x042E,
        ST_ZA           = 0x042F,
        TS_ZA           = 0x0430,
        TN_ZA           = 0x0431,
        VE_ZA           = 0x0432,
        XH_ZA           = 0x0433,
        ZU_ZA           = 0x0434,
        AF_ZA           = 0x0435,
        KA_GE           = 0x0436,
        FO_FO           = 0x0437,
        HI_IN           = 0x0438,
        MT_MT           = 0x0439,
        SE_NO           = 0x043A,
        YI_HEBR         = 0x043B,
        MS_MY           = 0x043D,
        KK_KZ           = 0x043E,
        KY_KG           = 0x043F,
        SW_KE           = 0x0440,
        TK_TM           = 0x0441,
        UZ_LATN_UZ      = 0x0442,
        TT_RU           = 0x0443,
        BN_IN           = 0x0444,
        PA_IN           = 0x0445,
        GU_IN           = 0x0446,
        OR_IN           = 0x0447,
        TA_IN           = 0x0448,
        TE_IN           = 0x0449,
        KN_IN           = 0x044A,
        ML_IN           = 0x044B,
        AS_IN           = 0x044C,
        MR_IN           = 0x044D,
        SA_IN           = 0x044E,
        MN_MN           = 0x044F,
        BO_CN           = 0x0450,
        CY_GB           = 0x0451,
        KM_KH           = 0x0452,
        LO_LA           = 0x0453,
        MY_MM           = 0x0454,
        GL_ES           = 0x0455,
        KOK_IN          = 0x0456,
        MNI_IN          = 0x0457,
        SD_DEVA_IN      = 0x0458,
        SYR_SY          = 0x0459,
        SI_LK           = 0x045A,
        CHR_CHER_US     = 0x045B,
        IU_CANS_CA      = 0x045C,
        AM_ET           = 0x045D,
        TZM_ARAB_MA     = 0x045E,
        KS_ARAB         = 0x045F,
        NE_NP           = 0x0460,
        FY_NL           = 0x0461,
        PS_AF           = 0x0462,
        FIL_PH          = 0x0463,
        DV_MV           = 0x0464,
        BIN_NG          = 0x0465,
        FUV_NG          = 0x0466,
        HA_LATN_NG      = 0x0467,
        IBB_NG          = 0x0468,
        YO_NG           = 0x0469,
        QUZ_BO          = 0x046A,
        NSO_ZA          = 0x046B,
        BA_RU           = 0x046C,
        LB_LU           = 0x046D,
        KL_GL           = 0x046E,
        IG_NG           = 0x046F,
        KR_NG           = 0x0470,
        OM_ET           = 0x0471,
        TI_ET           = 0x0472,
        GN_PY           = 0x0473,
        HAW_US          = 0x0474,
        LA_LATN         = 0x0475,
        SO_SO           = 0x0476,
        II_CN           = 0x0477,
        PAP_029         = 0x0478,
        ARN_CL          = 0x0479,
        MOH_CA          = 0x047A,
        BR_FR           = 0x047C,
        UG_CN           = 0x047E,
        MI_NZ           = 0x0480,
        OC_FR           = 0x0481,
        CO_FR           = 0x0482,
        GSW_FR          = 0x0483,
        SAH_RU          = 0x0484,
        QUT_GT          = 0x0485,
        RW_RW           = 0x0486,
        WO_SN           = 0x0487,
        PRS_AF          = 0x0488,
        PLT_MG          = 0x048C,
        ZH_YUE_HK       = 0x048D,
        TDD_TALE_CN     = 0x048E,
        KHB_TALU_CN     = 0x048F,
        GD_GB           = 0x0490,
        KU_ARAB_IQ      = 0x0491,
        QUC_CO          = 0x0492,
        QPS_PLOC        = 0x0493,
        QPS_PLOCA       = 0x0501,
        AR_IQ           = 0x05FE,
        CA_ES_VALENCIA  = 0x0801,
        ZH_CN           = 0x0803,
        DE_CH           = 0x0804,
        EN_GB           = 0x0807,
        ES_MX           = 0x0809,
        FR_BE           = 0x080A,
        IT_CH           = 0x080C,
        JA_PLOC_JP      = 0x0810,
        NL_BE           = 0x0811,
        NN_NO           = 0x0813,
        PT_PT           = 0x0814,
        RO_MD           = 0x0816,
        RU_MD           = 0x0818,
        SR_LATN_CS      = 0x0819,
        SV_FI           = 0x081A,
        UR_IN           = 0x081D,
        AZ_CYRL_AZ      = 0x0827,
        DSB_DE          = 0x082C,
        TN_BW           = 0x082E,
        SE_SE           = 0x0832,
        GA_IE           = 0x083B,
        MS_BN           = 0x083C,
        UZ_CYRL_UZ      = 0x083E,
        BN_BD           = 0x0843,
        PA_ARAB_PK      = 0x0845,
        TA_LK           = 0x0846,
        MN_MONG_CN      = 0x0849,
        BO_BT           = 0x0850,
        SD_ARAB_PK      = 0x0851,
        IU_LATN_CA      = 0x0859,
        TZM_LATN_DZ     = 0x085D,
        KS_DEVA         = 0x085F,
        NE_IN           = 0x0860,
        FF_LATN_SN      = 0x0861,
        QUZ_EC          = 0x0867,
        TI_ER           = 0x086B,
        QPS_PLOCM       = 0x0873,
        AR_EG           = 0x09FF,
        ZH_HK           = 0x0C01,
        DE_AT           = 0x0C04,
        EN_AU           = 0x0C07,
        ES_ES           = 0x0C09,
        FR_CA           = 0x0C0A,
        SR_CYRL_CS      = 0x0C0C,
        SE_FI           = 0x0C1A,
        MN_MONG_MN      = 0x0C3B,
        DZ_BT           = 0x0C50,
        TMZ_MA          = 0x0C51,
        QUZ_PE          = 0x0C5F,
        AR_LY           = 0x0C6b,
        ZH_SG           = 0x1001,
        DE_LU           = 0x1004,
        EN_CA           = 0x1007,
        ES_GT           = 0x1009,
        FR_CH           = 0x100A,
        HR_BA           = 0x100C,
        SMJ_NO          = 0x101A,
        TZM_TFNG_MA     = 0x103B,
        AR_DZ           = 0x105F,
        ZH_MO           = 0x1401,
        DE_LI           = 0x1404,
        EN_NZ           = 0x1407,
        ES_CR           = 0x1409,
        FR_LU           = 0x140A,
        BS_LATN_BA      = 0x140C,
        SMJ_SE          = 0x141A,
        AR_MA           = 0x143B,
        EN_IE           = 0x1801,
        ES_PA           = 0x1809,
        FR_MC           = 0x180A,
        SR_LATN_BA      = 0x180C,
        SMA_NO          = 0x181A,
        AR_TN           = 0x183B,
        EN_ZA           = 0x1C01,
        ES_DO           = 0x1C09,
        SR_CYRL_BA      = 0x1C0C,
        SMA_SE          = 0x1C1A,
        AR_OM           = 0x1C3B,
        EN_JM           = 0x2008,
        ES_VE           = 0x2009,
        FR_RE           = 0x200A,
        BS_CYRL_BA      = 0x200C,
        SMS_FI          = 0x201A,
        AR_YE           = 0x203B,
        EN_029          = 0x2401,
        ES_CO           = 0x2409,
        FR_CD           = 0x240A,
        SR_LATN_RS      = 0x240C,
        SMN_FI          = 0x241A,
        AR_SY           = 0x243B,
        EN_BZ           = 0x2801,
        ES_PE           = 0x2809,
        FR_SN           = 0x280A,
        SR_CYRL_RS      = 0x280C,
        AR_JO           = 0x281A,
        EN_TT           = 0x2C01,
        ES_AR           = 0x2C09,
        FR_CM           = 0x2C0A,
        SR_LATN_ME      = 0x2C0C,
        AR_LB           = 0x2C1A,
        EN_ZW           = 0x3001,
        ES_EC           = 0x3009,
        FR_CI           = 0x300A,
        SR_CYRL_ME      = 0x300C,
        AR_KW           = 0x301A,
        EN_PH           = 0x3401,
        ES_CL           = 0x3409,
        FR_ML           = 0x340A,
        AR_AE           = 0x340C,
        EN_ID           = 0x3801,
        ES_UY           = 0x3809,
        FR_MA           = 0x380A,
        AR_BH           = 0x380C,
        EN_HK           = 0x3c01,
        ES_PY           = 0x3c09,
        FR_HT           = 0x3c0A,
        AR_QA           = 0x3c0C,
        EN_IN           = 0x4001,
        ES_BO           = 0x4009,
        AR_PLOC_SA      = 0x400A,
        EN_MY           = 0x4401,
        ES_SV           = 0x4409,
        AR_145          = 0x440A,
        EN_SG           = 0x4801,
        ES_HN           = 0x4809,
        EN_AE           = 0x480A,
        ES_NI           = 0x4C09,
        EN_BH           = 0x4C0A,
        ES_PR           = 0x5009,
        EN_EG           = 0x500A,
        ES_US           = 0x5409,
        EN_JO           = 0x540A,
        ES_419          = 0x5809,
        EN_KW           = 0x580A,
        ES_CU           = 0x5C09,
        EN_TR           = 0x5C0A,
        EN_YE           = 0x6009,
        BS_CYRL         = 0x6409,
        BS_LATN         = 0x641A,
        SR_CYRL         = 0x681A,
        SR_LATN         = 0x6C1A,
        SMN             = 0x701A,
        AZ_CYRL         = 0x703B,
        SMS             = 0x742C,
        ZH              = 0x743B,
        NN              = 0x7804,
        BS              = 0x7814,
        AZ_LATN         = 0x781A,
        SMA             = 0x782C,
        UZ_CYRL         = 0x783B,
        MN_CYRL         = 0x7843,
        IU_CANS         = 0x7850,
        TZM_TFNG        = 0x785D,
        ZH_HANT         = 0x785F,
        NB              = 0x7C04,
        SR              = 0x7C14,
        TG_CYRL         = 0x7C1A,
        DSB             = 0x7C28,
        SMJ             = 0x7C2E,
        UZ_LATN         = 0x7C3B,
        PA_ARAB         = 0x7C43,
        MN_MONG         = 0x7C46,
        SD_ARAB         = 0x7C50,
        CHR_CHER        = 0x7C59,
        IU_LATN         = 0x7C5C,
        TZM_LATN        = 0x7C5D,
        FF_LATN         = 0x7C5F,
        HA_LATN         = 0x7C67
    ))
))

LNKConsoleDataBlock = Struct(
    'FillAttributes'                / LNKFillAttributesColors,
    'PopupFillAttributes'           / LNKFillAttributesColors,
    'ScreenBufferSizeX'             / Int16ul,
    'ScreenBufferSizeY'             / Int16ul,
    'WindowSizeX'                   / Int16ul,
    'WindowSizeY'                   / Int16ul,
    'WindowOriginX'                 / Int16ul,
    'WindowOriginY'                 / Int16ul,
    Padding(8),
    'FontSize'                      / Int32ul,
    'FontFamily'                    / Enum(Int32ul,
        FF_DONTCARE     = 0x00,
        FF_ROMAN        = 0x10,
        FW_SWISS        = 0x20,
        FF_MODERN       = 0x30,
        FF_SCRIPT       = 0x40,
        FF_DECORATIVE   = 0x50
    ),
    'FontWeight'                    / Int32ul,
    'RawFontFaceName'               / Bytes(64),
    'CursorSize'                    / Int32ul,
    'RawFullScreen'                 / Int32ul,
    'RawQuickEdit'                  / Int32ul,
    'RawInsertMode'                 / Int32ul,
    'RawAutomaticPosition'          / Int32ul,
    'HistoryBufferSize'             / Int32ul,
    'HistoryBufferCount'            / Int32ul,
    'RawHistoryDuplicatesAllowed'   / Int32ul,
    'ColorTable'                    / Array(16, Int32ul)
)

LNKExtraDataBlockHeader = Struct(
    'Size'                  / Int32ul,
    'BlockType'             / If(this.Size >= 0x04, LNKExtraDataBlockType)
)

LNKNetworkShareInformationHeader = Struct(
    'Size'                  / Int32ul,
    'Flags'                 / FlagsEnum(Int32ul,
        ValidDevice     = 0x01,
        ValidNetType    = 0x02
    ),
    'ShareNameOffset'       / Int32ul,
    'DeviceNameOffset'      / Int32ul,
    'NetworkProviderType'   / IfThenElse(
        this.Flags.ValidNetType, 
        LNKNetworkProviderType,
        Int32ul
    ),
    'UShareNameOffset'      / If(this.ShareNameOffset > 0x14, Int32ul),
    'UDeviceNameOffset'     / If(this.ShareNameOffset > 0x14, Int32ul)
)

LNKVolumeInformationHeader = Struct(
    'Size'                  / Int32ul,
    'DriveType'             / Enum(Int32ul,
        DRIVE_UNKNOWN       = 0x00,
        DRIVE_NO_ROOT_DIR   = 0x01,
        DRIVE_REMOVABLE     = 0x02,
        DRIVE_FIXED         = 0x03,
        DRIVE_REMOTE        = 0x04,
        DRIVE_CDROM         = 0x05,
        DRIVE_RAMDISK       = 0x06
    ),
    'DriveSerialNumber'     / Int32ul,
    'VolumeLabelOffset'     / Int32ul,
    'UVolumeLabelOffset'    / If(this.VolumeLabelOffset > 16, Int32ul)
)

LNKLocationInformationHeader = Struct(
    'Size'                              / Int32ul,
    'HeaderSize'                        / Int32ul,
    'Flags'                             / FlagsEnum(Int32ul,
        VolumeIDAndLocalBasePath                = 0x01,
        CommonNetworkRelativeLinkAndPathSuffix  = 0x02
    ),
    'VolumeIDOffset'                    / Int32ul,
    'LocalBasePathOffset'               / Int32ul,
    'CommonNetworkRelativeLinkOffset'   / Int32ul,
    'CommonPathSuffixOffset'            / Int32ul,
    'ULocalBasePathOffset'              / If(this.HeaderSize > 28, Int32ul),
    'UCommonPathSuffixOffset'           / If(this.HeaderSize > 32, Int32ul)
)

LNKLinkTargetIDListItemID = Struct(
    'Size'                  / Int16ul,
    'Data'                  / If(this.Size > 0, Bytes(this.Size - 2))
)

LNKLinkTargetIDListSize = Int16ul

LNKHotKey = Struct(
    'LowerValue'            / LNKHotKeyLowerValue,
    'UpperValue'            / LNKHotKeyUpperValue
)

LNKFileHeader = Struct(
    'HeaderSize'            / Const(0x4C, Int32ul),
    'LNKClassIdentifier'    / NTFSGUID,
    'DataFlags'             / LNKDataFlags,
    'FileAttributeFlags'    / Int32ul,
    'RawCreateTime'         / NTFSFILETIME,
    'RawLastAccessTime'     / NTFSFILETIME,
    'RawLastModifiedTime'   / NTFSFILETIME,
    'FileSize'              / Int32ul,
    'IconIndex'             / Int32sl,
    'ShowWindow'            / LNKShowWindow,
    'HotKey'                / LNKHotKey,
    Padding(10)
)
